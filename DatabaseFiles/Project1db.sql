CREATE TABLE ERS_REIMBURSEMENT_STATUS
(
    REIMB_STATUS_ID NUMBER,
    REIMB_STATUS VARCHAR2(10) NOT NULL,
    
    CONSTRAINT REIMB_STATUS_PK PRIMARY KEY (REIMB_STATUS_ID)
);

CREATE TABLE ERS_REIMBURSEMENT_TYPE
(
    REIMB_TYPE_ID NUMBER,
    REIMB_TYPE VARCHAR2(10) NOT NULL,
    
    CONSTRAINT REIMB_TYPE_PK PRIMARY KEY (REIMB_TYPE_ID)
);

CREATE TABLE ERS_USER_ROLES
(
    ERS_USER_ROLE_ID NUMBER,
    USER_ROLE VARCHAR(10) NOT NULL,
    
    CONSTRAINT USER_ROLE_PK PRIMARY KEY (ERS_USER_ROLE_ID)
);

CREATE TABLE ERS_USERS
(
    ERS_USERS_ID NUMBER,
    ERS_USERNAME VARCHAR2(50) UNIQUE NOT NULL,
    ERS_PASSWORD VARCHAR2(50) NOT NULL,
    USER_FIRST_NAME VARCHAR2(100) NOT NULL,
    USER_LAST_NAME VARCHAR2(100) NOT NULL,
    USER_EMAIL VARCHAR2(150) UNIQUE NOT NULL,
    USER_ROLE_ID NUMBER NOT NULL,
    
    CONSTRAINT ERS_USERS_PK PRIMARY KEY (ERS_USERS_ID),
    
    CONSTRAINT USER_ROLES_FK FOREIGN KEY (USER_ROLE_ID)
    REFERENCES ERS_USER_ROLES(ERS_USER_ROLE_ID)--,
);

CREATE TABLE ERS_REIMBURSEMENT
(
    REIMB_ID NUMBER,
    REIMB_AMMOUNT NUMBER NOT NULL,
    REIMB_SUBMITTED TIMESTAMP NOT NULL,
    REIMB_RESOLVED TIMESTAMP,
    REIMB_DESCRIPTION VARCHAR(250),
    REIMB_RECEIPT BLOB,
    REIMB_AUTHOR NOT NULL,
    REIMB_RESOLVER NUMBER,
    REIMB_STATUS_ID NUMBER NOT NULL,
    REIMB_TYPE_ID NUMBER NOT NULL,
    
    CONSTRAINT pk_for_table_checking_account PRIMARY KEY (REIMB_ID),
    
    CONSTRAINT fk_for_rbAuthor FOREIGN KEY (REIMB_AUTHOR)
    REFERENCES ERS_USERS(ERS_USERS_ID),
    
    CONSTRAINT fk_for_rbResolver FOREIGN KEY (REIMB_RESOLVER)
    REFERENCES ERS_USERS(ERS_USERS_ID),
    
    CONSTRAINT fk_for_rbStatusId FOREIGN KEY (REIMB_STATUS_ID)
    REFERENCES ERS_REIMBURSEMENT_STATUS(REIMB_STATUS_ID),
    
    CONSTRAINT ERS_REIMBURSEMENT_TYPE_FK FOREIGN KEY (REIMB_TYPE_ID)
    REFERENCES ERS_REIMBURSEMENT_TYPE(REIMB_TYPE_ID)
);

CREATE SEQUENCE ERS_REIMB_ID_SEQ
MINVALUE 0 START WITH 0 INCREMENT BY 1 ORDER NOMAXVALUE;

CREATE SEQUENCE ERS_USERS_ID_SEQ
MINVALUE 0 START WITH 0 INCREMENT BY 1 ORDER NOMAXVALUE;

CREATE SEQUENCE ERS_USER_ROLE_ID_SEQ
MINVALUE 0 START WITH 0 INCREMENT BY 1 ORDER NOMAXVALUE;

CREATE SEQUENCE ERS_REIMB_TYPE_ID_SEQ
MINVALUE 0 START WITH 0 INCREMENT BY 1 ORDER NOMAXVALUE;

CREATE SEQUENCE ERS_REIMB_STATUS_ID_SEQ
MINVALUE 0 START WITH 0 INCREMENT BY 1 ORDER NOMAXVALUE;

CREATE OR REPLACE TRIGGER UNIQUE_ERS_REIMB_ID
BEFORE INSERT ON ERS_REIMBURSEMENT
FOR EACH ROW
BEGIN
    :new.REIMB_ID := ERS_REIMB_ID_SEQ.NEXTVAL;
    SELECT LOCALTIMESTAMP INTO :new.REIMB_SUBMITTED FROM DUAL;
END;
/

CREATE TRIGGER UNIQUE_ERS_USERS_ID
BEFORE INSERT ON ERS_USERS
FOR EACH ROW
BEGIN
    :new.ERS_USERS_ID := ERS_USERS_ID_SEQ.NEXTVAL;
END;
/

CREATE TRIGGER UNIQUE_ERS_REIMB_STATUS_ID
BEFORE INSERT ON ERS_REIMBURSEMENT_STATUS
FOR EACH ROW
BEGIN
    :new.REIMB_STATUS_ID := ERS_REIMB_STATUS_ID_SEQ.NEXTVAL;
END;
/

CREATE TRIGGER UNIQUE_ERS_REIMB_TYPE_ID
BEFORE INSERT ON ERS_REIMBURSEMENT_TYPE
FOR EACH ROW
BEGIN
    :new.REIMB_TYPE_ID := ERS_REIMB_TYPE_ID_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER UNIQUE_ERS_USER_ROLE_ID
BEFORE INSERT ON ERS_USER_ROLES
FOR EACH ROW
BEGIN
    :new.ERS_USER_ROLE_ID := ERS_USER_ROLE_ID_SEQ.NEXTVAL;
END;
/


CREATE OR REPLACE TRIGGER REIMB_TIMESTAMP_RESOLVE
BEFORE UPDATE ON ERS_REIMBURSEMENT
FOR EACH ROW
BEGIN
    IF(:old.REIMB_RESOLVED IS NULL AND :new.REIMB_STATUS_ID = 1)
    THEN
        SELECT LOCALTIMESTAMP INTO :new.REIMB_RESOLVED FROM DUAL;
    END IF;
END;
/

INSERT INTO ERS_REIMBURSEMENT_TYPE VALUES (NULL,'PAYOUT');
INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES(NULL,'PENDING');
INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES(NULL,'APPROVED');
INSERT INTO ERS_REIMBURSEMENT_STATUS VALUES(NULL,'DENIED');

INSERT INTO ERS_USERS VALUES (NULL,'Quinton','1234','Quinton','Cook','quinton@email.com',0);
INSERT INTO ERS_USERS VALUES(NULL,'Yousef','1234','Yousef','Muhammed','yousef@email.com',1);
INSERT INTO ERS_USER_ROLES VALUES(NULL,'ADMIN');

UPDATE ERS_USERS SET ERS_USERS_ID = 1 WHERE ERS_USERNAME = 'Quinton';
DELETE FROM ERS_REIMBURSEMENT WHERE REIMB_AUTHOR = 0;
SELECT ERS_USERS_ID_SEQ.NEXTVAL FROM DUAL;

EXEC INSERT_REIMBURSEMENT(200.12,'FANCY DINNER',1);

CREATE OR REPLACE PROCEDURE INSERT_REIMBURSEMENT 
(
  AMMOUNT_IN IN NUMBER DEFAULT 0
, DESCRIPTION_IN IN VARCHAR2 DEFAULT 'DEFAULT'
, AUTHOR_IN IN NUMBER DEFAULT -1
) AS 
BEGIN
--0 is the id of pending and the payout reimb type
  INSERT INTO ERS_REIMBURSEMENT VALUES(NULL,AMMOUNT_IN,NULL,NULL,DESCRIPTION_IN,NULL,AUTHOR_IN,NULL,0,0);
END INSERT_REIMBURSEMENT;
/
